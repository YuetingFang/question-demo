{"ast":null,"code":"import _objectSpread from\"/fs/fast/u2024000982/project/Question_annotation/src/annotation/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/fs/fast/u2024000982/project/Question_annotation/src/annotation/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"history\"];import React,{useEffect}from'react';import{Routes,Route,Navigate,useNavigate,useLocation,unstable_HistoryRouter as HistoryRouter}from'react-router-dom';import{createBrowserHistory}from'history';import'bootstrap/dist/css/bootstrap.min.css';import'./Desktop.css';// Import only desktop pages\nimport Introduction from'./pages/Introduction';import Guidelines from'./pages/Guidelines';import ExamplesPage from'./pages/ExamplesPage';import ThankYouPage from'./pages/ThankYouPage';// 创建自定义历史对象，使我们可以完全控制导航器历史\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const history=createBrowserHistory();// 自定义路由器组件，使用传入的history对象\nfunction CustomRouter(_ref){let{history}=_ref,props=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsx(HistoryRouter,_objectSpread({history:history},props));}// 应用已启动标记\nlet appStarted=false;// 主路由组件 - 只使用桌面版本\nfunction DesktopRoutes(){return/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Introduction,{})}),/*#__PURE__*/_jsx(Route,{path:\"/introduction\",element:/*#__PURE__*/_jsx(Introduction,{})}),/*#__PURE__*/_jsx(Route,{path:\"/guidelines\",element:/*#__PURE__*/_jsx(Guidelines,{})}),/*#__PURE__*/_jsx(Route,{path:\"/examples\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/examples/0\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/examples/:index\",element:/*#__PURE__*/_jsx(ExamplesPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/thankyou\",element:/*#__PURE__*/_jsx(ThankYouPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]});}// 强制阻止后退按钮功能\n// 这种方法更强大，可以确保每次点击后退按钮都停留在当前页面\nhistory.listen(_ref2=>{let{action}=_ref2;// 监听所有的POP动作（浏览器的后退按钮操作）\nif(action==='POP'){// 立即进行一次前进操作来抛掉后退操作\n// 同时使用replace而不是push，以避免创建新的历史记录\nconst currentPath=window.location.pathname;console.log('Blocking back button navigation from path:',currentPath);history.replace(currentPath);}});// 简化历史管理代码，避免干扰正常导航\nif(typeof window!=='undefined'){// 添加popstate事件监听器阻止后退按钮\nwindow.addEventListener('popstate',function(e){// 获取当前路径\nconst currentPath=window.location.pathname;// 如果是例子页面，允许导航\nif(currentPath.startsWith('/examples/')){console.log('Allowing navigation to examples page:',currentPath);return true;}// 对于其他页面，阻止后退\nconsole.log('Blocking back button navigation from path:',currentPath);window.history.pushState({noBackButton:true,path:currentPath},document.title,currentPath);// 阻止默认行为\ne.preventDefault();return false;});// 在DOM加载完成后设置历史状态\ndocument.addEventListener('DOMContentLoaded',function(){// 保存当前路径\nconst currentPath=window.location.pathname;console.log('Setting history state for path:',currentPath);// 如果是例子页面，不进行历史操作\nif(currentPath.startsWith('/examples/')){console.log('Preserving history for examples page');return;}// 对于其他页面，设置历史状态\nwindow.history.replaceState({firstPage:true},document.title,currentPath);});}// 导航管理组件 - 增强版本，每个页面都清空历史栈\nfunction NavigationManager(){const location=useLocation();const navigate=useNavigate();// 处理页面切换时清空历史栈\nuseEffect(()=>{// 清空当前页面的历史栈\nconst clearHistoryStack=()=>{if(typeof window!=='undefined'){// 1. 替换当前历史条目\nwindow.history.replaceState({noBackButton:true},document.title);// 2. 添加新的历史条目（这样当前页面成为历史中的第二页）\nwindow.history.pushState({noBackButton:true},document.title);// 3. 修改当前条目的状态以区分\nwindow.history.replaceState({currentPage:location.pathname},document.title);console.log('History stack cleared on page:',location.pathname);}};// 在每次页面切换时清空历史栈\nclearHistoryStack();},[location.pathname]);// 依赖于当前路径，每次路径变化时执行\n// 处理初始化和页面刷新\nuseEffect(()=>{// 处理初始化、刷新或直接URL访问\nif(!appStarted){// 如果不在首页并且应用刚刚加载，重定向到首页\nif(location.pathname!=='/'){navigate('/',{replace:true});}appStarted=true;}},[location.pathname,navigate]);// 监听浏览器的后退按钮\nuseEffect(()=>{const handleBeforeUnload=()=>{// 刷新则清除应用状态\nappStarted=false;};// 添加页面卸载事件监听器\nwindow.addEventListener('beforeunload',handleBeforeUnload);return()=>{window.removeEventListener('beforeunload',handleBeforeUnload);};},[]);return null;}// 主应用组件\nfunction Desktop(){return/*#__PURE__*/_jsx(CustomRouter,{history:history,children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(NavigationManager,{}),/*#__PURE__*/_jsx(\"main\",{className:\"desktop-main\",children:/*#__PURE__*/_jsx(DesktopRoutes,{})})]})});}export default Desktop;","map":{"version":3,"names":["React","useEffect","Routes","Route","Navigate","useNavigate","useLocation","unstable_HistoryRouter","HistoryRouter","createBrowserHistory","Introduction","Guidelines","ExamplesPage","ThankYouPage","jsx","_jsx","jsxs","_jsxs","history","CustomRouter","_ref","props","_objectWithoutProperties","_excluded","_objectSpread","appStarted","DesktopRoutes","children","path","element","to","replace","listen","_ref2","action","currentPath","window","location","pathname","console","log","addEventListener","e","startsWith","pushState","noBackButton","document","title","preventDefault","replaceState","firstPage","NavigationManager","navigate","clearHistoryStack","currentPage","handleBeforeUnload","removeEventListener","Desktop","className"],"sources":["/fs/fast/u2024000982/project/Question_annotation/src/annotation/frontend/src/Desktop.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate, useLocation, unstable_HistoryRouter as HistoryRouter } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Desktop.css';\n\n// Import only desktop pages\nimport Introduction from './pages/Introduction';\nimport Guidelines from './pages/Guidelines';\nimport ExamplesPage from './pages/ExamplesPage';\nimport ThankYouPage from './pages/ThankYouPage';\n\n// 创建自定义历史对象，使我们可以完全控制导航器历史\nconst history = createBrowserHistory();\n\n// 自定义路由器组件，使用传入的history对象\nfunction CustomRouter({ history, ...props }) {\n  return (\n    <HistoryRouter history={history} {...props} />\n  );\n}\n\n\n// 应用已启动标记\nlet appStarted = false;\n\n// 主路由组件 - 只使用桌面版本\nfunction DesktopRoutes() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Introduction />} />\n      <Route path=\"/introduction\" element={<Introduction />} />\n      <Route path=\"/guidelines\" element={<Guidelines />} />\n      <Route path=\"/examples\" element={<Navigate to=\"/examples/0\" replace />} />\n      <Route path=\"/examples/:index\" element={<ExamplesPage />} />\n      <Route path=\"/thankyou\" element={<ThankYouPage />} />\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n    </Routes>\n  );\n}\n\n// 强制阻止后退按钮功能\n// 这种方法更强大，可以确保每次点击后退按钮都停留在当前页面\nhistory.listen(({ action }) => {\n  // 监听所有的POP动作（浏览器的后退按钮操作）\n  if (action === 'POP') {\n    // 立即进行一次前进操作来抛掉后退操作\n    // 同时使用replace而不是push，以避免创建新的历史记录\n    const currentPath = window.location.pathname;\n    console.log('Blocking back button navigation from path:', currentPath);\n    history.replace(currentPath);\n  }\n});\n\n// 简化历史管理代码，避免干扰正常导航\nif (typeof window !== 'undefined') {\n  // 添加popstate事件监听器阻止后退按钮\n  window.addEventListener('popstate', function(e) {\n    // 获取当前路径\n    const currentPath = window.location.pathname;\n    \n    // 如果是例子页面，允许导航\n    if (currentPath.startsWith('/examples/')) {\n      console.log('Allowing navigation to examples page:', currentPath);\n      return true;\n    }\n    \n    // 对于其他页面，阻止后退\n    console.log('Blocking back button navigation from path:', currentPath);\n    window.history.pushState({noBackButton: true, path: currentPath}, document.title, currentPath);\n    \n    // 阻止默认行为\n    e.preventDefault();\n    return false;\n  });\n  \n  // 在DOM加载完成后设置历史状态\n  document.addEventListener('DOMContentLoaded', function() {\n    // 保存当前路径\n    const currentPath = window.location.pathname;\n    console.log('Setting history state for path:', currentPath);\n    \n    // 如果是例子页面，不进行历史操作\n    if (currentPath.startsWith('/examples/')) {\n      console.log('Preserving history for examples page');\n      return;\n    }\n    \n    // 对于其他页面，设置历史状态\n    window.history.replaceState({firstPage: true}, document.title, currentPath);\n  });\n}\n\n// 导航管理组件 - 增强版本，每个页面都清空历史栈\nfunction NavigationManager() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // 处理页面切换时清空历史栈\n  useEffect(() => {\n    // 清空当前页面的历史栈\n    const clearHistoryStack = () => {\n      if (typeof window !== 'undefined') {\n        // 1. 替换当前历史条目\n        window.history.replaceState({ noBackButton: true }, document.title);\n        // 2. 添加新的历史条目（这样当前页面成为历史中的第二页）\n        window.history.pushState({ noBackButton: true }, document.title);\n        // 3. 修改当前条目的状态以区分\n        window.history.replaceState({ currentPage: location.pathname }, document.title);\n        \n        console.log('History stack cleared on page:', location.pathname);\n      }\n    };\n    \n    // 在每次页面切换时清空历史栈\n    clearHistoryStack();\n    \n  }, [location.pathname]); // 依赖于当前路径，每次路径变化时执行\n\n  // 处理初始化和页面刷新\n  useEffect(() => {\n    // 处理初始化、刷新或直接URL访问\n    if (!appStarted) {\n      // 如果不在首页并且应用刚刚加载，重定向到首页\n      if (location.pathname !== '/') {\n        navigate('/', { replace: true });\n      }\n      appStarted = true;\n    }\n  }, [location.pathname, navigate]);\n\n  // 监听浏览器的后退按钮\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      // 刷新则清除应用状态\n      appStarted = false;\n    };\n    \n    // 添加页面卸载事件监听器\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    \n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n  return null;\n}\n\n// 主应用组件\nfunction Desktop() {\n  return (\n    <CustomRouter history={history}>\n      <div className=\"App\">\n        <NavigationManager />\n        <main className=\"desktop-main\">\n          <DesktopRoutes />\n        </main>\n      </div>\n    </CustomRouter>\n  );\n}\n\nexport default Desktop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}